from telegram import InlineKeyboardButton, InlineKeyboardMarkup

CB_FAQ_PREFIX = "faq:"
CB_PM_PREFIX = "pm:"


_PM_LABELS = {
    "veo": {"ru": "üé¨ –í–∏–¥–µ–æ–ø—Ä–æ–º–ø—Ç (VEO)", "en": "üé¨ Video prompt (VEO)"},
    "mj": {"ru": "üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (Midjourney)", "en": "üñºÔ∏è Image prompt (MJ)"},
    "animate": {"ru": "ü´• –û–∂–∏–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ", "en": "ü´• Photo animate"},
    "banana": {"ru": "‚úÇÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ (Banana)", "en": "‚úÇÔ∏è Photo edit (Banana)"},
    "suno": {"ru": "üéµ –¢—Ä–µ–∫ (Suno)", "en": "üéµ Track (Suno)"},
    "back": {"ru": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "en": "‚¨ÖÔ∏è Back"},
}

_ENGINE_DISPLAY = {
    "veo": {"ru": "VEO", "en": "VEO"},
    "mj": {"ru": "Midjourney", "en": "Midjourney"},
    "banana": {"ru": "Banana", "en": "Banana"},
    "animate": {"ru": "VEO Animate", "en": "VEO Animate"},
    "suno": {"ru": "Suno", "en": "Suno"},
}


def _label(key: str, lang: str) -> str:
    data = _PM_LABELS.get(key, {})
    return data.get(lang, data.get("en", ""))


def prompt_master_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    rows = [
        [InlineKeyboardButton(_label("veo", lang), callback_data=f"{CB_PM_PREFIX}veo")],
        [InlineKeyboardButton(_label("mj", lang), callback_data=f"{CB_PM_PREFIX}mj")],
        [InlineKeyboardButton(_label("animate", lang), callback_data=f"{CB_PM_PREFIX}animate")],
        [InlineKeyboardButton(_label("banana", lang), callback_data=f"{CB_PM_PREFIX}banana")],
        [InlineKeyboardButton(_label("suno", lang), callback_data=f"{CB_PM_PREFIX}suno")],
        [InlineKeyboardButton(_label("back", lang), callback_data=f"{CB_PM_PREFIX}back")],
    ]
    return InlineKeyboardMarkup(rows)


def prompt_master_mode_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    back = _label("back", lang)
    switch = "üîÅ –°–º–µ–Ω–∏—Ç—å –¥–≤–∏–∂–æ–∫" if lang == "ru" else "üîÅ Switch engine"
    rows = [
        [InlineKeyboardButton(back, callback_data=f"{CB_PM_PREFIX}back")],
        [InlineKeyboardButton(switch, callback_data=f"{CB_PM_PREFIX}switch")],
    ]
    return InlineKeyboardMarkup(rows)


def prompt_master_result_keyboard(engine: str, lang: str = "ru") -> InlineKeyboardMarkup:
    display = _ENGINE_DISPLAY.get(engine, {}).get(lang, engine.upper())
    copy_text = "üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å" if lang == "ru" else "üìã Copy"
    insert_text = (
        f"‚¨áÔ∏è –í—Å—Ç–∞–≤–∏—Ç—å –≤ –∫–∞—Ä—Ç–æ—á–∫—É ({display})"
        if lang == "ru"
        else f"‚¨áÔ∏è Insert into {display} card"
    )
    back = _label("back", lang)
    switch = "üîÅ –°–º–µ–Ω–∏—Ç—å –¥–≤–∏–∂–æ–∫" if lang == "ru" else "üîÅ Switch engine"
    rows = [
        [
            InlineKeyboardButton(copy_text, callback_data=f"{CB_PM_PREFIX}copy:{engine}"),
            InlineKeyboardButton(insert_text, callback_data=f"{CB_PM_PREFIX}insert:{engine}"),
        ],
        [
            InlineKeyboardButton(back, callback_data=f"{CB_PM_PREFIX}back"),
            InlineKeyboardButton(switch, callback_data=f"{CB_PM_PREFIX}switch"),
        ],
    ]
    return InlineKeyboardMarkup(rows)


def faq_keyboard() -> InlineKeyboardMarkup:
    rows = [
        [
            InlineKeyboardButton("üé¨ –í–∏–¥–µ–æ (VEO)", callback_data=f"{CB_FAQ_PREFIX}veo"),
            InlineKeyboardButton("üé® –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (MJ)", callback_data=f"{CB_FAQ_PREFIX}mj"),
        ],
        [
            InlineKeyboardButton("üß© Banana", callback_data=f"{CB_FAQ_PREFIX}banana"),
            InlineKeyboardButton("üéµ –ú—É–∑—ã–∫–∞ (Suno)", callback_data=f"{CB_FAQ_PREFIX}suno"),
        ],
        [
            InlineKeyboardButton("üíé –ë–∞–ª–∞–Ω—Å –∏ –æ–ø–ª–∞—Ç–∞", callback_data=f"{CB_FAQ_PREFIX}billing"),
            InlineKeyboardButton("‚ö° –¢–æ–∫–µ–Ω—ã –∏ –≤–æ–∑–≤—Ä–∞—Ç—ã", callback_data=f"{CB_FAQ_PREFIX}tokens"),
        ],
        [
            InlineKeyboardButton("üí¨ –û–±—ã—á–Ω—ã–π —á–∞—Ç", callback_data=f"{CB_FAQ_PREFIX}chat"),
            InlineKeyboardButton("üß† Prompt-Master", callback_data=f"{CB_FAQ_PREFIX}pm"),
        ],
        [
            InlineKeyboardButton("‚ÑπÔ∏è –û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data=f"{CB_FAQ_PREFIX}common"),
            InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ (–≤ –≥–ª–∞–≤–Ω–æ–µ)", callback_data=f"{CB_FAQ_PREFIX}back"),
        ],
    ]
    return InlineKeyboardMarkup(rows)
