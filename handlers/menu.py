from __future__ import annotations

from typing import Sequence

from telegram import InlineKeyboardButton

from keyboards import kb_main
from texts import (
    TXT_AI_DIALOG_CHOOSE,
    TXT_AI_DIALOG_NORMAL,
    TXT_AI_DIALOG_PM,
    TXT_KB_AI_DIALOG,
    TXT_KB_MUSIC,
    TXT_KB_PHOTO,
    TXT_KB_PROFILE,
    TXT_KB_VIDEO,
    TXT_MENU_TITLE,
)
from ui.card import build_card

_MAIN_MENU_SUBTITLE = "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:"


def build_main_menu_card() -> dict:
    """Return the unified card used for the /menu screen."""

    markup = kb_main()
    return build_card(TXT_MENU_TITLE, _MAIN_MENU_SUBTITLE, markup.inline_keyboard)


def build_profile_card(balance: str, warning: str | None = None) -> dict:
    rows = [
        [InlineKeyboardButton("üíé –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="profile:topup")],
        [InlineKeyboardButton("üßæ –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π", callback_data="profile:history")],
        [InlineKeyboardButton("üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞", callback_data="profile:invite")],
        [InlineKeyboardButton("üéÅ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥", callback_data="profile:promo")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="profile:back")],
    ]
    body: Sequence[str] | None = (warning,) if warning else None
    return build_card(TXT_KB_PROFILE, f"–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} üíé", rows, body_lines=body)


def build_photo_card() -> dict:
    rows = [
        [InlineKeyboardButton("Midjourney", callback_data="mode:mj_txt")],
        [InlineKeyboardButton("Banana", callback_data="mode:banana")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")],
    ]
    return build_card(TXT_KB_PHOTO, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç:", rows)


def build_music_card() -> dict:
    rows = [
        [InlineKeyboardButton("üéº –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–ª", callback_data="music:inst")],
        [InlineKeyboardButton("üéô –í–æ–∫–∞–ª", callback_data="music:vocal")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")],
    ]
    return build_card(TXT_KB_MUSIC, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:", rows)


def build_video_card(*, veo_fast_cost: int, veo_photo_cost: int) -> dict:
    rows = [
        [
            InlineKeyboardButton(
                f"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ (Veo Fast) ‚Äî üíé {veo_fast_cost}",
                callback_data="mode:veo_text_fast",
            )
        ],
        [
            InlineKeyboardButton(
                f"–û–∂–∏–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (Veo) ‚Äî üíé {veo_photo_cost}",
                callback_data="mode:veo_photo",
            )
        ],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")],
    ]
    return build_card(TXT_KB_VIDEO, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", rows)


def build_dialog_card() -> dict:
    rows = [
        [
            InlineKeyboardButton(TXT_AI_DIALOG_NORMAL, callback_data="mode:chat"),
            InlineKeyboardButton(TXT_AI_DIALOG_PM, callback_data="mode:prompt_master"),
        ],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")],
    ]
    return build_card(TXT_KB_AI_DIALOG, TXT_AI_DIALOG_CHOOSE, rows)


__all__ = [
    "build_dialog_card",
    "build_main_menu_card",
    "build_music_card",
    "build_photo_card",
    "build_profile_card",
    "build_video_card",
]
